daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    client_max_body_size 100m;

    server_tokens off;
    log_format custom 'measure#nginx.service=$request_time request="$request" '
        'status_code=$status request_id=$http_x_request_id '
        'remote_addr="$remote_addr" forwarded_for="$http_x_forwarded_for" '
        'forwarded_proto="$http_x_forwarded_proto" via="$http_via" '
        'body_bytes_sent=$body_bytes_sent referer="$http_referer" '
        'user_agent="$http_user_agent"';
    access_log logs/nginx/access.log custom;
    error_log logs/nginx/error.log;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 30 seconds.
    client_body_timeout 30;

    upstream backend {
        server <%= ENV['HEROKU_APP_NAME'] %>.herokuapp.com;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name <%= ENV['DOMAIN'] %>;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host <%= ENV['HEROKU_APP_NAME'] %>.herokuapp.com;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }

        location ~* \.(js|css)$ {
            add_header Content-Type application/javascript;
            add_header Content-Type text/css;
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
}
